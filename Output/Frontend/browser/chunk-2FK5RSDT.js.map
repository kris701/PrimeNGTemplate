{
  "version": 3,
  "sources": ["src/app/pages/auth/auth.login.ts", "src/app/pages/auth/auth.routes.ts"],
  "sourcesContent": ["import { Component } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { CheckboxModule } from 'primeng/checkbox';\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport { PasswordModule } from 'primeng/password';\r\nimport { RippleModule } from 'primeng/ripple';\r\nimport { AppFloatingConfigurator } from '../../layout/component/app.floatingconfigurator';\r\nimport { Router } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\r\nimport { APIURL } from '../../../globals';\r\nimport { Endpoints } from '../../../Endpoints';\r\nimport { AuthenticationOutput } from '../../models/Core/authenticationOutput';\r\nimport { AuthenticateInput } from '../../models/Core/authenticateInput';\r\nimport { JWTTokenModel } from '../../models/Core/jWTTokenModel';\r\nimport { TagModule } from 'primeng/tag';\r\nimport { LayoutService } from '../../layout/service/layout.service';\r\n\r\n@Component({\r\n    selector: 'app-login',\r\n    standalone: true,\r\n    imports: [ButtonModule, CheckboxModule, InputTextModule, PasswordModule, FormsModule, RouterModule, RippleModule, AppFloatingConfigurator, TagModule],\r\n    template: `\r\n        <app-floating-configurator />\r\n        <p-tag [style]=\"{ 'position': 'absolute', 'left':'15px', 'top':'15px' }\">Running on API: {{ apiUrl }}</p-tag>\r\n        <div class=\" flex items-center justify-center min-h-screen min-w-[100vw] overflow-hidden\">\r\n            <div class=\"flex flex-col items-center justify-center\">\r\n                <div style=\"border-radius: 56px; padding: 0.3rem; background: linear-gradient(180deg, var(--primary-color) 2%, rgba(33, 150, 243, 0) 110%)\">\r\n                    <div class=\"w-full card py-20 px-8 sm:px-20\" style=\"border-radius: 53px\">\r\n                        <div class=\"text-center mb-2\">\r\n                            @if (layoutService.isDarkTheme())\r\n                            {\r\n                                <img class=\"mb-2 w-64 shrink-0 mx-auto\" src=\"src/assets/images/logo_large_transparant.png\"/>\r\n                            }\r\n                            @else\r\n                            {\r\n                                <img class=\"mb-2 w-64 shrink-0 mx-auto\" src=\"src/assets/images/logo_large_transparant_inv.png\"/>\r\n                            }\r\n                            <div class=\"text-3xl font-medium mb-4\">Welcome to PrimeNG Template!</div>\r\n                            <span class=\"text-muted-color font-medium\">Sign in to continue</span>\r\n                        </div>\r\n\r\n                        <div class=\"flex flex-col\">\r\n                            <label for=\"email1\">Username</label>\r\n                            <input pInputText id=\"email1\" type=\"text\" placeholder=\"Username\" class=\"w-full md:w-[30rem] mb-2\" [(ngModel)]=\"LoginName\" />\r\n\r\n                            <label for=\"password1\">Password</label>\r\n                            <p-password id=\"password1\" [(ngModel)]=\"Password\" placeholder=\"Password\" [toggleMask]=\"true\" styleClass=\"mb-4\" [fluid]=\"true\" [feedback]=\"false\" (keyup.enter)=\"doLogin()\"></p-password>\r\n\r\n                            <p-button label=\"Sign In\" styleClass=\"w-full\" (click)=\"doLogin()\"></p-button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    `\r\n})\r\nexport class Login {\r\n    constructor(private router: Router, private http: HttpClient, layoutService: LayoutService){\r\n        this.layoutService = layoutService;\r\n     }\r\n\r\n    layoutService : LayoutService;\r\n    apiUrl : string = APIURL;\r\n    LoginName: string = '';\r\n\r\n    Password: string = '';\r\n\r\n    ngOnInit(){\r\n        if (!localStorage.getItem(\"jwtToken\")){\r\n            localStorage.removeItem(\"jwtToken\");\r\n            localStorage.removeItem(\"perms\");\r\n        }\r\n    }\r\n\r\n    doLogin() {\r\n        var input = {\r\n            username: this.LoginName,\r\n            password: this.Password\r\n        } as AuthenticateInput;\r\n        this.http.post<AuthenticationOutput>(APIURL + Endpoints.Core.Authentication.Post_Authenticate, input).subscribe(c => {\r\n            if (c.jwtToken != \"\")\r\n            {\r\n                localStorage.removeItem(\"perms\");\r\n                const helper = new JwtHelperService();\r\n                var result = helper.decodeToken<JWTTokenModel>(c.jwtToken);\r\n                if (!result)\r\n                    return;\r\n                if (result.role == null)\r\n                    result.role = [];\r\n                var permsStr = \"\";\r\n                result.role.forEach(p => {\r\n                    permsStr += p + \";\"\r\n                });\r\n                localStorage.setItem(\"perms\", permsStr);\r\n                localStorage.setItem(\"jwtToken\", c.jwtToken);\r\n                this.router.navigate([\"/\"]);\r\n            }\r\n        }, e => {\r\n            alert(\"Username or Password is incorrect!\");\r\n        });\r\n    }\r\n}\r\n", "import { Routes } from '@angular/router';\r\nimport { Login } from './auth.login';\r\n\r\nexport default [\r\n    { path: 'login', component: Login }\r\n] as Routes;\r\n"],
  "mappings": "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",
  "names": []
}
